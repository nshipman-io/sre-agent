services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sre-agent-backend
    ports:
      - "8000:8000"
    environment:
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}

      # Kubernetes Configuration
      # For local development, mount your kubeconfig
      - K8S_CONFIG_PATH=/root/.kube/config
      - K8S_NAMESPACE=${K8S_NAMESPACE:-default}

      # ChromaDB Configuration
      - CHROMA_PERSIST_DIRECTORY=/app/data/chromadb
      - CHROMA_COLLECTION_NAME=${CHROMA_COLLECTION_NAME:-runbooks}

      # Server Configuration
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=${DEBUG:-false}
    volumes:
      # Persist ChromaDB data
      - chromadb-data:/app/data/chromadb

      # Mount runbooks directory
      - ./docs/runbooks:/app/docs/runbooks:ro

      # Mount kubeconfig for local development
      # Uncomment and adjust path for your setup
      - ${HOME}/.kube/config:/root/.kube/config:ro
    networks:
      - sre-agent-network
      - kind
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sre-agent-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - sre-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  chromadb-data:
    driver: local

networks:
  sre-agent-network:
    driver: bridge
  kind:
    external: true
